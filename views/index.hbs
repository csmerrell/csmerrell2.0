<div id="vm-carousel">
    <block-carousel id="bc-samples" v-cloak>
        <block>
            <block-title>
                DEMOs: Component Frameworks
            </block-title>
            <block-content>
                <highlightjs autodetect :code="codeSample1" />                
            </block-content>
            <block-action-list>
                <block-action href="samples/carousel">
                    Sample: Block Carousel
                </block-action>
                <block-action href="samples/tagfilter">
                    Sample: Tag Filterview
                </block-action>
                <block-action href="samples/codetabs">
                    Sample: Code Tabs
                </block-action>
            </block-action-list>
        </block>
        <block>
            <block-title>
                Event-driven UX
            </block-title>
            <block-content>
                <highlightjs autodetect :code="codeSample2" />                
            </block-content>
        </block>
    </block-carousel>
</div>

<div class="module-spacing"></div>

<div id="vm-skill-search" class="pure-g">
    <input type="text" v-model="filterStr" /> 
    <filterable-tag class="pure-u-1 pure-u-sm-1-3 pure-u-md-1-4 pure-u-xl-1-6" :data-key="key" 
        v-for="(skill, key) in skills" :data-item="skill" :filter-str="filterStr"></skill-tag>
</div>

<script type="module">
    import { BlockCarousel, Block } from "/static/js/components/blockCarousel.js";

    window.vms["vm-carousel"] = new Vue({
        el: "#vm-carousel",
        components: [ BlockCarousel, Block ],
        data: {
            codeSample1: `<div id="app">
    <block-carousel id="bc-samples" v-cloak>
        <block>
            <block-title>
                DEMO: Component Web Frameworks
            </block-title>
            <block-content>
                <highlightjs autodetect :code="codeSample1" />                
            </block-content>
            <block-action>
                View Source
            </block-action>
        </block>
        <block>
            <block-title>
                Event-driven UX
            </block-title>
            <block-content>
                <highlightjs autodetect :code="codeSample2" />                
            </block-content>
        </block>
    </block-carousel>
</div\>
<script type="module">
    import { BlockCarousel, Block } from "/static/js/components/blockCarousel.js";

    window.vms["vm-carousel"] = new Vue({
        el: "#app",
        components: [ BlockCarousel, Block ],
        data: { /* ... */ },
    })
</script\>`,
            codeSample2: `methods: {
    setActive: function() {
        this.isActive = true;
    },
    toggleActive: function() {
        let isFadeIn = !this.isActive;

        if(isFadeIn) {
            this.isActive = !this.isActive;
        }

        return new Promise((resolve, reject) => {
            if(!isFadeIn) {
                this.setAnimation("fadeOut", resolve);
            } else {
                this.setAnimation("fadeIn", resolve);
            }
        }).then(() => {
            this.isActive = isFadeIn;
            this.$el.classList.remove("fade-out");
            this.$el.classList.remove("pre-fade-in");
            this.$el.classList.remove("fade-in");
        })
    },
    setAnimation: function(animationName, resolve) {
        this.$el.addEventListener('transitionend', () => { this.onAnimationComplete(resolve) });
        
        if(animationName == "fadeOut") {
            this.$el.classList.add("fade-out");
        } else {
            this.$el.classList.add("pre-fade-in");
            this.isActive = true;
            debugger;
            this.$el.classList.add("fade-in");
        }
    },
    onAnimationComplete: function(resolve) {
        this.$el.removeEventListener('transitionend', this.onAnimationComplete);
        resolve();
    }
},`
        },
    })
</script>

<script type="module">
    import { skills } from "/static/js/localData/skills.js";
    import { hashSkillArray, hashString, hashKeywordMap } from "/static/js/util/hasher.js";
    import { FilterableTag } from "/static/js/components/filterableTag.js";

    let hashedSkillMap = hashSkillArray(skills);
    hashKeywordMap(hashedSkillMap);

    window.vms["vm-skill-search"] = new Vue({
        el: "#vm-skill-search",
        components: [ FilterableTag ],
        data: {
            skills: hashedSkillMap,
            filterStr: "",
            activeFilter: null
        },
    })
</script>