<div id="home" style="display: none;">
    <link href="/static/css/compiled/views/home.css" rel="stylesheet" />
    <div id="vm-intro" class="about-me">
        <div class="pure-u-1-24 pure-u-md-1-12 pure-u-xl-1-8"></div>
        <div class="pure-u-11-12 pure-u-md-5-6 pure-u-xl-3-4">
            <h1 class="role-title">Curtis Merrell</h1>
            <div class="info-container pure-u-1 pure-g">
                <h3 class="sub-roles pure-u-1">
                    <span class="role">Front End Web Developer</span> 
                    <span class="divider">|</span>
                    <span class="role">UI/UX Engineer</span>
                </h3>
                <div class="blurb-box">
                    <div class="profile-box">
                        <img src="/static/img/me/family.png" alt="My Family (PNG)" class="profile-photo" />
                        <div class="photo-placeholder"></div>
                        <div class="profile-toggle hidden">
                            <button class="pure-button toggler left selected" onclick="() => { setProfile('left') }">hooman</button>
                            <button class="pure-button toggler right" onclick="() => { setProfile('right') }">devDoggo</button>
                        </div>
                    </div>
                    <div class="statement pure-u-1 pure-u-sm-2-3 pure-u-lg-3-4">
                        <p>
                            Welcome to my demo application. I built/created everything here effectively from scratch using HTML, Sass/PureCss, and JS/Vue. The server is a lightweight Node/Express server that's been tuned to an MVC structure of content delivery. There is currently no database (though the REST api structure is complete), as front end skill demonstrations were my priority. (<a href="https://github.com/csmerrell/csmerrell2.0" target="_blank">Source Repository</a> - Documentation coming soon).
                        </p>
                        <p class="mini-header"><b>My Professional Background:</b></p>
                        <p>
                            In 2014, I fell in love with web development as a full stack engineer writing CMS applications for my university's College of Life Sciences. After cutting my teeth professionally in <a href="https://angular.io" target="_blank">Angular</a> and <a href="https://reactjs.org" target="_blank">React</a>, I settled into a permanent role the past 4 years developing web applications for <a href="https://www.navair.navy.mil/" target="_blank">NAWCWD China Lake</a> in a combination of <a href="https://vuejs.org" target="_blank">VueJS</a> & <a href="https://docs.microsoft.com/en-us/dotnet/" target="_blank">.Net Core MVC</a>.  
                        </p>
                        <p>
                            Web development is my passion. I've been writing web applications for 6 years, and I'm looking to fit myself into a new space within the distributed world of remote software development.
                        </p>
                    </div>
                </div>
                <div class="experience-logos">
                    <div class="logo employer-navair">
                        <a href="https://www.navair.navy.mil/" target="_blank">
                            <img src="static/img/logos/navairLogoBlue.png" alt="Navair Logo" class="navair-logo light" />
                            <img src="static/img/logos/navairLogoWhite.png" alt="Navair Logo" class="navair-logo dark" />
                        </a>
                        <p class="employer-text">
                            Front End Web Developer | Software Engineer 
                        </p>
                        <p class="employer-text">
                            (Feb 2017 - Present)
                        </p>
                    </div>
                    <div class="logo alma-mater">
                        <a href="https://lifesciences.byu.edu/" target="_blank">
                            <img src="static/img/logos/byuLogoBlue.png" alt="BYU Logo" class="alma-logo light" />
                            <img src="static/img/logos/byuLogoWhite.png" alt="BYU Logo" class="alma-logo dark" />
                        </a>
                        <p class="alumnus-text">
                            Lead Student Developer (Oct 2014 - Nov 2016)
                        </p>
                        <p class="alumnus-text">
                            Alumnus: B.S. Computer Science (Dec. 2016)
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="pure-u-1-24 pure-u-md-1-12 pure-u-xl-1-8"></div>
    </div>
    <div id="vm-carousel" class="code-carousel">
        <link href='/static/css/compiled/components/blockCarousel.css' rel="stylesheet" />

        <block-carousel id="bc-samples" v-cloak>
            <block>
                <block-title>
                    Demo: Carousel Component
                </block-title>
                <block-content>
                    <highlightjs autodetect :code="codeSample1" />                
                </block-content>
                <block-action-list>
                    <block-action href="docs/BlockCarousel/GettingStarted">
                        Usage
                    </block-action>
                    <block-action href="docs/BlockCarousel/API">
                        API
                    </block-action>
                    <block-action href="docs/BlockCarousel/Design">
                        Design
                    </block-action>
                    <block-action href="docs/BlockCarousel/ActionDesignRevisions">
                        Note: Problem Solving
                    </block-action>
                </block-action-list>
            </block>
            <block>
                <block-title>
                    Demo: Tag Filterview
                </block-title>
                <block-content>
                    <highlightjs autodetect :code="codeSample2" />                
                </block-content>
                <block-action-list>
                    <block-action href="docs/TagFilterview">
                        View Documentation
                    </block-action>
                </block-action-list>
            </block>
            <block>
                <block-title>
                    Demo: Theme Selector
                </block-title>
                <block-content>
                    <highlightjs autodetect :code="codeSample3" />                
                </block-content>
                <block-action-list>
                    <block-action href="docs/ThemeSelector">
                        View Documentation
                    </block-action>
                </block-action-list>
            </block>
        </block-carousel>
    </div>
    <div id="vm-skill-filterview" class="skill-filterview pure-g pure-form hidden">
        <div class="pure-u-1-24 pure-u-lg-1-12 pure-u-xl-1-6"></div>
        <div class="pure-u-11-12 pure-u-lg-5-6 pure-u-xl-2-3">
            <link href="static/css/compiled/components/filterableTag.css" rel="stylesheet" />


            <h2>Professional Skills</h2>
            <div class="pure-u-1 skill-filter">
                <input type="text" class="pure-input-1" v-on:keyup="updateFilter" placeholder="Filter skills"/>
            </div>
            <div class="skill-list pure-g">
                <div class="skill pure-u-1 pure-u-md-1-2 pure-u-lg-1-3 pure-u-xl-1-4" v-for="(skill, key) in skills">
                    <filterable-tag :data-key="key" :data-item="skill" :filter-str="filterStr" :on-toggle="adjustSizing" 
                        :on-filter="setVisibility"></filterable-tag>
                </div>
                <div class="fade-tags skill pure-u-1 pure-u-md-1-2 pure-u-lg-1-3 pure-u-xl-1-4" v-for="tag in fadeTags" v-if="hasNoFilters()">
                    <filterable-tag data-key="empty" data-item="{}" filter-str=""></filterable-tag>
                </div>
                <div class="fade-out" v-if="hasNoFilters()"></div>
                {{> loaders/centerAdjusted loaderId="skill-loader" pos="absolute" opacity="transparent" }}
            </div> 
        </div>
        <div class="pure-u-1-24 pure-u-lg-1-12 pure-u-xl-1-6"></div>
    </div>
</div>
{{> loaders/centerAdjusted loaderId="main-loader" pos="fixed" opacity="opaque"}}

<!-- Loader binding -->
<script>
    window.homeEl = document.getElementById("home");
    window.mainLoaderEl = document.getElementById("main-loader");
    window.mainLoaderEl.style.display = 'block';
</script>

<!-- Block Carousel vm mounting and data config -->
<script type="module">
    import { BlockCarousel } from "/static/js/components/blockCarousel.js";
    import { CodeSample1, CodeSample2, CodeSample3 } from "/static/js/localData/codeSamples.js";

    window.vms["vm-carousel"] = new Vue({
        el: "#vm-carousel",
        components: [ BlockCarousel ],
        data: {
            codeSample1: CodeSample1,
            codeSample2: CodeSample2,
            codeSample3: CodeSample3
        },
        mounted: function() {
            setTimeout(() => {
                window.mainLoaderEl.style.display ="none";
                window.homeEl.style.display = "block";
            }, 1000)
        }
    })
</script>

<!-- Skill filterview vm mounting and data config -->
<script type="module">
    import { skills } from "/static/js/localData/skills.js";
    import { mapSkillArray, mapSkillKeywords } from "/static/js/util/mapper.js";
    import { FilterableTag } from "/static/js/components/filterableTag.js";

    let skillMap = mapSkillArray(skills);
    mapSkillKeywords(skillMap);

    window.vms["vm-skill-filterview"] = new Vue({
        el: "#vm-skill-filterview",
        components: [ FilterableTag ],
        data: {
            skills: skillMap,
            fadeTags: [{},{},{},{}],
            filterStr: "",
            activeFilter: null
        },
        methods: {
            updateFilter: function(e) {
                let skillLoader = document.getElementById('skill-loader');
                skillLoader.style.display = 'block';

                this.filterStr = e.target.value;

                //TODO - Refactor this to await resolution of a promise tied to all the skill filter processes.
                setTimeout(() => {
                    skillLoader.style.display = "none";
                }, 500)
            },
            adjustSizing: function(e) {
                //NOTE - Function never fires with expandable skill tags disabled.
                //TODO - Revise or remove this code when the skill tags are made expandable with additional details

                /*
                    This could be done with cleaner code by converting the skill container to an "expandableColumn" component in its own right.
                    Instead, this method shows a strategy for mixing component-framework logic with native javascript logic.
                */

                if(e.isExpanded) {
                    e.$el.parentElement.className = "skill pure-u-1";
                } else {
                    e.$el.parentElement.className = "skill pure-u-1 pure-u-md-1-2 pure-u-lg-1-3 pure-u-xl-1-4";
                }
            },
            setVisibility: function(e) {
                if(e.isVisible) {
                    e.$el.parentElement.classList.remove("hidden");
                } else {
                    e.$el.parentElement.classList.add("hidden");
                }
            },
            hasNoFilters: function() {
                return this.filterStr == "";
            }
        },
        created: function() {
            this.updateFilter = _.debounce(this.updateFilter, 500);
        },
        mounted: function() {
            setTimeout(() => {
                //Wait for all children to mount before showing the parent component
                this.$el.classList.remove("hidden");
            }, 100)
        }
    })
</script>