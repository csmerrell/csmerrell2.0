<link href="/static/css/compiled/views/home.css" rel="stylesheet" />

<div id="home">
    <div id="vm-carousel">
        <link href='/static/css/compiled/components/blockCarousel.css' rel="stylesheet" />

        <block-carousel id="bc-samples" v-cloak>
            <block>
                <block-title>
                    Demo: Carousel Component (Vue)
                </block-title>
                <block-content>
                    <highlightjs autodetect :code="codeSample1" />                
                </block-content>
                <block-action-list>
                    <block-action href="samples/carousel">
                        Sample: Block Carousel
                    </block-action>
                    <block-action href="samples/tagfilter">
                        Sample: Tag Filterview
                    </block-action>
                    <block-action href="samples/codetabs">
                        Sample: Code Tabs
                    </block-action>
                </block-action-list>
            </block>
            <block>
                <block-title>
                    Event-driven UX
                </block-title>
                <block-content>
                    <highlightjs autodetect :code="codeSample2" />                
                </block-content>
            </block>
        </block-carousel>
    </div>

    <div class="module-spacing"></div>

    <div id="vm-skill-filterview" class="pure-g pure-form hidden">
        <div class="pure-u-1-24 pure-u-lg-1-12 pure-u-xl-1-6"></div>
        <div class="pure-u-11-12 pure-u-lg-5-6 pure-u-xl-2-3">
            <link href="static/css/compiled/components/filterableTag.css" rel="stylesheet" />


            <h2>Professional Skills</h2>
            <div class="pure-u-1 skill-filter">
                <input type="text" class="pure-input-1" v-on:keyup="updateFilter" placeholder="Filter skills"/>
            </div>
            <div class="skill-list pure-g">
                <div class="skill pure-u-1 pure-u-md-1-2 pure-u-lg-1-3 pure-u-xl-1-4" v-for="(skill, key) in skills">
                    <filterable-tag :data-key="key" :data-item="skill" :filter-str="filterStr" :on-toggle="adjustSizing" :on-filter="setVisibility"></skill-tag>                    
                </div>
            </div> 
        </div>
        <div class="pure-u-1-24 pure-u-lg-1-12 pure-u-xl-1-6"></div>
    </div>
</div>

<!-- Block Carousel vm mounting and data config -->
<script type="module">
    import { BlockCarousel, Block } from "/static/js/components/blockCarousel.js";
    import { CodeSample1, CodeSample2 } from "/static/js/localData/codeSamples.js";

    window.vms["vm-carousel"] = new Vue({
        el: "#vm-carousel",
        components: [ BlockCarousel, Block ],
        data: {
            codeSample1: CodeSample1,
            codeSample2: CodeSample2
        },
    })
</script>

<!-- Skill filterview vm mounting and data config -->
<script type="module">
    import { skills } from "/static/js/localData/skills.js";
    import { mapSkillArray, mapSkillKeywords } from "/static/js/util/mapper.js";
    import { FilterableTag } from "/static/js/components/filterableTag.js";

    let skillMap = mapSkillArray(skills);
    mapSkillKeywords(skillMap);

    window.vms["vm-skill-filterview"] = new Vue({
        el: "#vm-skill-filterview",
        components: [ FilterableTag ],
        data: {
            skills: skillMap,
            filterStr: "",
            activeFilter: null
        },
        methods: {
            updateFilter: function(e) {
                this.filterStr = e.target.value;
            },
            adjustSizing: function(e) {
                //NOTE - Function never fires with expandable skill tags disabled.
                //TODO - Revise or remove this code when the skill tags are made expandable with additional details

                /*
                    This could be done with cleaner code by converting the skill container to an "expandableColumn" component in its own right.
                    Instead, this method shows a strategy for mixing component-framework logic with native javascript logic.
                */

                if(e.isExpanded) {
                    e.$el.parentElement.className = "skill pure-u-1";
                } else {
                    e.$el.parentElement.className = "skill pure-u-1 pure-u-md-1-2 pure-u-lg-1-3 pure-u-xl-1-4";
                }
            },
            setVisibility: function(e) {
                if(e.isVisible) {
                    e.$el.parentElement.classList.remove("hidden");
                } else {
                    e.$el.parentElement.classList.add("hidden");
                }
            }
        },
        created: function() {
            this.updateFilter = _.debounce(this.updateFilter, 200);
        },
        mounted: function() {
            setTimeout(() => {
                //Wait for all children to mount before showing the parent component
                this.$el.classList.remove("hidden");
            }, 100)
        }
    })
</script>